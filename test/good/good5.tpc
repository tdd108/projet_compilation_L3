int array[16];

//Swap integer values by array indexes
void swap(int a, int b)
{
	int tmp;
	tmp = array[a];
	array[a] = array[b];
	array[b] = tmp;
}

//Partition the array into two halves and return the
//index about which the array is partitioned
int partition(int left, int right)
{
	int pivotIndex; 
	int pivotValue; 
	int index; 
	int i;
	pivotIndex = left;
	pivotValue = array[pivotIndex];
	index = left;

	swap(pivotIndex, right);
	i = left;
	while (i < right) {
		if(array[i] < pivotValue)
		{
			swap(i, index);
			index = index + 1;
		}
		i = i + 1;
	}
   	swap(right, index);

   	return index;
}

//Quicksort the array
void quicksort(int left, int right)
{
	int index;
	if(left >= right)
		return;
   	index = partition(left, right);
	quicksort(left, index - 1);
	quicksort(index + 1, right);
}

int main(void)
{
	int i;

	array[0] = 62;
	array[1] = 83;
	array[2] = 4;
	array[3] = 89;
	array[4] = 36;
	array[5] = 21;
	array[6] = 74;
	array[7] = 37;
	array[8] = 65;
	array[9] = 33;
	array[10] = 96;
	array[11] = 38;
	array[12] = 53;
	array[13] = 16;
	array[14] = 74;
	array[15] = 55;

	i = 0;
	while (i < 16)
	{	
		putint(array[i]);
		i = i + 1;
	}

	quicksort(0, 15);

	putchar('a');

	i = 0;
	while (i < 16)
	{	
		putint(array[i]);
		i = i + 1;
	}


	return 0;
}